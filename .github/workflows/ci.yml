name: CI

on:
  push:
    branches:
      - main
      # 5.2.x, 6.0.x, etc
      - /\d+\.\d+\.x/
      # 5.x, 6.x, etc
      - /\d+\.x/
  pull_request:
    branches:
      - main
      # 5.2.x, 6.0.x, etc
      - /\d+\.\d+\.x/
      # 5.x, 6.x, etc
      - /\d+\.x/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Persist package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/releases
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm lint

  tests_local_browsers:
    runs-on: ${{ matrix.playwright-version == '1.37.1' && 'ubuntu-22.04' || 'ubuntu-latest' }} # Ubuntu 24.04 fails when trying to install the libasound2 package, a Playwright system dependency
    needs: build
    strategy:
      fail-fast: false
      matrix:
        browser:
          - chromium
          - firefox
          - webkit
        browser-version:
          - latest
        playwright-version:
          - 1.51.0 # Latest/same as in `package.json`
        include:
          # Match Angular browser support when Angular 19 was released
          - browser: chromium
            browser-version: 130 # Previous major Chrome version when Angular 19 was released
            playwright-version: 1.48.2
          - browser: firefox
            browser-version: 130 # Firefox 131 was the previous major version when Angular 19 was released but this is not supported by any Playwright version
            playwright-version: 1.48.2
          - browser: firefox
            browser-version: esr-115 # Old ESR when Firefox 131 was released
            playwright-version: 1.37.1
          - browser: firefox
            browser-version: esr-128 # New ESR when Firefox 131 was released
            playwright-version: 1.46.1
          - browser: webkit
            browser-version: 16 # Previous major Safari version when Angular 19 was released
            playwright-version: 1.45.3
    container:
      image: mcr.microsoft.com/playwright:v${{ matrix.playwright-version }}
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Cache Vitest cache
        uses: actions/cache@v4
        with:
          path: .vite
          key: vitest-browser-${{ runner.os }}-${{ matrix.browser }}-${{ matrix.browser-version }}-configuration-${{ hashFiles('vitest.workspace.ts', '**/vite.config.mts', '**/test-setup.ts') }}-tests-${{ hashFiles('**/**.spec.ts') }}-${{ github.run_id }}
          restore-keys: |
            vitest-browser-${{ runner.os }}-${{ matrix.browser }}-${{ matrix.browser-version }}-configuration-${{ hashFiles('vitest.workspace.ts', '**/vite.config.mts', '**/test-setup.ts') }}-tests-${{ hashFiles('**/**.spec.ts') }}
            vitest-browser-${{ runner.os }}-${{ matrix.browser }}-${{ matrix.browser-version }}-configuration-${{ hashFiles('vitest.workspace.ts', '**/vite.config.mts', '**/test-setup.ts') }}
            vitest-browser-${{ runner.os }}-${{ matrix.browser }}-${{ matrix.browser-version }}
            vitest-browser-${{ runner.os }}-${{ matrix.browser }}
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/releases
      - name: Install dependencies
        run: pnpm install
      - name: Install Playwright (${{ matrix.playwright-version }})
        run: pnpm add --save-dev playwright@${{ matrix.playwright-version }}
      # - name: Install Playwright system dependencies
      #   run: pnpm exec playwright install-deps ${{ matrix.browser }}
      # - name: Install Playwright browser (${{ matrix.browser }} ${{ matrix.browser-version }})
      #   run: pnpm exec playwright install ${{ matrix.browser }}
      - name: Run local browser tests
        run: pnpm exec nx run-many --targets=test --parallel=1 --browser=${{ matrix.browser }}

  tests_ssr:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Cache Vitest cache
        uses: actions/cache@v4
        with:
          path: .vite
          key: vitest-ssr-${{ runner.os }}-configuration-${{ hashFiles('vitest.workspace.ts', '**/vite.config.ssr.mts', '**/test-setup.ssr.ts') }}-tests-${{ hashFiles('**/**.spec.ts') }}-${{ github.run_id }}
          restore-keys: |
            vitest-ssr-${{ runner.os }}-configuration-${{ hashFiles('vitest.workspace.ts', '**/vite.config.ssr.mts', '**/test-setup.ssr.ts') }}-tests-${{ hashFiles('**/**.spec.ts') }}
            vitest-ssr-${{ runner.os }}-configuration-${{ hashFiles('vitest.workspace.ts', '**/vite.config.ssr.mts', '**/test-setup.ssr.ts') }}
            vitest-ssr-${{ runner.os }}
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/releases
      - name: Install dependencies
        run: pnpm install
      - name: Run SSR tests
        run: pnpm exec nx run-many --projects="@ngbracket/ngx-layout" --projects=universal-demo-app --targets=test --parallel=1 --configuration=ssr

  integration_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/releases
      - name: Install dependencies
        run: pnpm install
      - name: Build universal demo app
        run: |
          pnpm run build
          pnpm build:universal-demo-app

  publish_snapshots:
    environment: FLEX_LAYOUT_BUILDS_TOKEN
    runs-on: ubuntu-latest
    needs: [tests_local_browsers, integration_tests]
    # if: github.event_name == 'push' && github.event.pull_request == null
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/releases
      - name: Install dependencies
        run: pnpm install
      - name: Stamp
        run: pnpm stamp
      - name: Publish snapshots
        env:
          FLEX_LAYOUT_BUILDS_TOKEN: ${{ secrets.FLEX_LAYOUT_BUILDS_TOKEN }}
        run: ./scripts/deploy/publish-build-artifacts.sh --no-build
